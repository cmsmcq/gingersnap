<?xml version="1.0" encoding="UTF-8"?>
<test-set xmlns:gt="http://blackmesatech.com/2020/grammartools"
          gt:date="2021-01-13T07:58:27.924099-07:00">
   <desc>
      <p>This document contains tests for the language defined
      by [what grammar?], generated by an as yet nameless set
      of test-case generation tools.</p>
      <p>Test polarity:  negative.</p>
      <p>Test selection:  state.</p>
   </desc>
   <testcase gt:rulename="state-neg-m-S_2"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 + error">
      <input-string>(㷽a)</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-S_2"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 + error ">
      <input-string>(㷽)</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-S·S·_1"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 1 / m-S·S·_1 + error">
      <input-string>(a#)</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-S·S·_1"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 1 / m-S·S·_1 + error ">
      <input-string>(a#</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-S·S·_2"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 + error">
      <input-string>((�a))</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-S·S·_2"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 + error ">
      <input-string>((�))</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-S·S·S·_1"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 . 1 / m-S·S·S·_1 + error">
      <input-string>((a#))</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-S·S·S·_1"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 . 1 / m-S·S·S·_1 + error ">
      <input-string>((a#)</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-S·S·S·_2"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 . 2 / m-S·S·S·_2 + error">
      <input-string>(((今a)))</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-S·S·S·_2"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 . 2 / m-S·S·S·_2 + error ">
      <input-string>(((今)))</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-S·S·_4"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 . 1 / m-S·S·S·_1 . 1 / m-S·S·_4 + error">
      <input-string>((a))</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-S·S·_4"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 . 1 / m-S·S·S·_1 . 1 / m-S·S·_4 + error ">
      <input-string>((a)</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-max-S_1"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 . 2 / m-S·S·S·_2 . 1 / m-max-S_1 + error">
      <input-string>((((卐a)))</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-max-S_1"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 . 2 / m-S·S·S·_2 . 1 / m-max-S_1 + error ">
      <input-string>((((卐)))</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-max-S_2"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 . 2 / m-S·S·S·_2 . 2 / m-max-S_2 + error">
      <input-string>(((a񫛜)))</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-max-S_2"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 . 2 / m-S·S·S·_2 . 2 / m-max-S_2 + error ">
      <input-string>(((a񫛜))</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-S·S·S·_4˅max-S_3"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 . 2 / m-S·S·S·_2 . 2 / m-max-S_2 . 1 / m-S·S·S·_4˅max-S_3 + error">
      <input-string>(((a)*))</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-S·S·S·_4˅max-S_3"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 . 2 / m-S·S·S·_2 . 2 / m-max-S_2 . 1 / m-S·S·S·_4˅max-S_3 + error ">
      <input-string>(((a)*)</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-S·S·S·_4˅S·S·_4˅max-S_3"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 . 2 / m-S·S·S·_2 . 2 / m-max-S_2 . 1 / m-S·S·S·_4˅max-S_3 . 1 / m-S·S·S·_4˅S·S·_4˅max-S_3 + error">
      <input-string>(((a))$)</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-S·S·S·_4˅S·S·_4˅max-S_3"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 . 2 / m-S·S·S·_2 . 2 / m-max-S_2 . 1 / m-S·S·S·_4˅max-S_3 . 1 / m-S·S·S·_4˅S·S·_4˅max-S_3 + error ">
      <input-string>(((a))$</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-S_4˅S·S·S·_4˅S·S·_4˅max-S_3"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 . 2 / m-S·S·S·_2 . 2 / m-max-S_2 . 1 / m-S·S·S·_4˅max-S_3 . 1 / m-S·S·S·_4˅S·S·_4˅max-S_3 . 1 / m-S_4˅S·S·S·_4˅S·S·_4˅max-S_3 + error">
      <input-string>(((a)))$)</input-string>
   </testcase>
   <testcase gt:rulename="state-neg-m-S_4˅S·S·S·_4˅S·S·_4˅max-S_3"
             gt:polarity="negative"
             gt:trace="S_0 . 2 / m-S_2 . 2 / m-S·S·_2 . 2 / m-S·S·S·_2 . 2 / m-max-S_2 . 1 / m-S·S·S·_4˅max-S_3 . 1 / m-S·S·S·_4˅S·S·_4˅max-S_3 . 1 / m-S_4˅S·S·S·_4˅S·S·_4˅max-S_3 + error ">
      <input-string>(((a)))$</input-string>
   </testcase>
</test-set>
